WEBVTT

00:05.110 --> 00:10.720
Hello everyone and welcome to part one Dom interaction and this lecture will use javascript to actually

00:10.720 --> 00:16.190
interact with DOM elements so as I mentioned we're going to begin to see examples of how we can actually

00:16.210 --> 00:22.610
grab h T.M. elements from the document object model and these HTL elements are the properties of that

00:22.610 --> 00:25.900
javascript object which is the document.

00:26.080 --> 00:30.820
So we're going to be covering how to grab large groups of elements like the entire body of the HTML

00:31.000 --> 00:35.200
or just the head of the T.M. and then we'll focus on grabbing specific HTML items.

00:35.200 --> 00:40.270
Maybe your instrument just grabbing a certain class or a certain ID and in feature lectures will show

00:40.270 --> 00:42.730
you how you can interact with those objects.

00:42.730 --> 00:47.500
So right now we're just focusing on grabbing those elements themselves in future lectures We'll show

00:47.500 --> 00:50.510
you how to change the colors or affect their properties somehow.

00:51.260 --> 00:51.750
OK.

00:51.960 --> 00:58.010
Here are some important document attributes so you can call document and say Dot your L body that head

00:58.010 --> 01:03.680
that links so that your L that's actually going to return the actual You l of the website that body

01:03.770 --> 01:08.490
that's everything inside the body is going to return each time of the entire body document.

01:08.510 --> 01:12.270
The head is going to return everything that's in the head of the page.

01:12.440 --> 01:18.720
And then that links those are all the links that are on the page and there are many methods for grabbing

01:18.720 --> 01:21.550
specific elements from the document object model.

01:21.780 --> 01:26.130
And these methods are usually pretty self-explanatory except for those last two.

01:26.280 --> 01:30.610
But first off let's start off with element by ID so element by the.

01:30.840 --> 01:34.060
That returns an element with whatever ID you pass in.

01:34.230 --> 01:40.890
So imagine that your T.M. has a specific ID that you clarified earlier when creating the HCM L. S. document

01:40.950 --> 01:44.570
that element by ID will actually grab those elements.

01:44.580 --> 01:48.200
Well usually ID is a single element by the ID you.

01:48.360 --> 01:54.270
Then you can get element by class name so pass in a class and Ill return a list of all items belonging

01:54.270 --> 02:00.630
to that class then document that element by tag name returns a list of all elements of a certain tag.

02:00.630 --> 02:04.890
So if you want everything that has an anchor tag you can do that as well.

02:04.950 --> 02:08.200
Then we have queery selector and query selector all there.

02:08.210 --> 02:12.290
A little more new than the previous three but they're still pretty well used.

02:12.450 --> 02:14.870
Now the painting when you actually are viewing this.

02:14.890 --> 02:22.200
But the query selector returns the first object matching the CSSA style selector and then query selector

02:22.210 --> 02:26.430
all returns all objects matching the CSA style selector.

02:26.430 --> 02:30.540
And we're going to show examples of query selector and query selector all since we're going to be using

02:30.540 --> 02:31.160
those a lot.

02:31.260 --> 02:37.300
So again the first three there are pretty self-explanatory but the query selector can accept any CSSA

02:37.300 --> 02:43.920
style selectors so you can use things like the hash tag to clarify it's an ID or the DOT if you want

02:43.920 --> 02:44.600
a class.

02:44.610 --> 02:49.300
So basically anything for CSSA that you use as a style selector.

02:49.350 --> 02:53.910
You can just pass directly into query selector and if that's unclear to you now don't worry I'll show

02:53.950 --> 02:56.290
it plenty of examples as we move along.

02:56.370 --> 03:00.990
But again the difference between group selector in the query selector all is that query selector all

03:00.990 --> 03:05.080
returns a list of all matches group selector it just returns the first match.

03:06.130 --> 03:12.340
OK the relevant files for this particular lecture are part 1 main page for each symbol and part one

03:12.340 --> 03:17.580
color changer that Jap's we're going start off by this connecting the aged female file from color change

03:17.610 --> 03:23.020
about javascript and exploring it a bit manually then we're going to cut out a complex example which

03:23.020 --> 03:24.820
is actually going to be color change.

03:24.870 --> 03:26.080
Yes.

03:26.140 --> 03:30.700
All right let's explore these various methods and get started by opening up those two files in the editor

03:30.850 --> 03:32.360
and linking them to our browser.

03:32.560 --> 03:38.770
OK so here we have part one main page T.M. open in my editor and I also have open in my browser on the

03:38.770 --> 03:42.370
right hand side and something you notice that's probably pretty interesting to you.

03:42.370 --> 03:46.300
Is that the heading one is randomly changing color.

03:46.420 --> 03:48.620
And you're probably wondering how the heck is that happening.

03:48.730 --> 03:53.590
Well in this lecture we're going to actually cut out the example that creates that effect in order to

03:53.590 --> 03:58.840
begin explaining how we can grab elements from the document object model and then effect them using

03:58.840 --> 04:00.600
javascript.

04:00.640 --> 04:06.250
But what we're going to do start off is in part one underscore main underscore page scroll all the way

04:06.250 --> 04:06.780
down.

04:06.790 --> 04:11.830
Now you should see the connection to the part 1 color changer that Jack script what I want you to do

04:11.950 --> 04:15.240
is comment this out to begin with.

04:15.460 --> 04:18.760
Save it and then refreshed the connection page.

04:18.760 --> 04:20.680
And you should see it just turn to black.

04:20.680 --> 04:25.090
We're going to be focusing on right now is grabbing those common document attributes and then showing

04:25.090 --> 04:27.060
the various methods we have to grab.

04:27.070 --> 04:28.750
Ace HTML elements.

04:28.750 --> 04:30.370
So let's get started on that.

04:30.370 --> 04:35.640
I'm going to expand my browser and start off by exploring these points right here.

04:35.680 --> 04:39.550
The tree also covered in the slide so it's nice but the html file is.

04:39.550 --> 04:45.190
It's basically notes for what we're going to be doing going to Right-Click inspects and then open up

04:45.190 --> 04:49.150
the council and your council is probably not going be as zoomed in as mine because this is just for

04:49.150 --> 04:50.250
readability.

04:50.260 --> 04:54.620
Let's show you how to grab important document attributes if you want to grab the actual Yoro the Web

04:54.620 --> 04:58.910
site you past document and then all caps you are ill.

04:59.110 --> 05:00.850
And this turns to you are all the Web site.

05:00.850 --> 05:02.970
In my case stuff is being hosted locally.

05:03.010 --> 05:04.990
So I just get the file location.

05:05.710 --> 05:12.550
If you want to grep everything inside the body you can say document that body enter and then you can

05:12.550 --> 05:18.820
see here we actually have HTL code which is the entire body and if we want to grab everything in the

05:18.820 --> 05:25.300
head we just say documents that head and notice these are attributes not methods so I'm not putting

05:25.300 --> 05:27.640
any clothes princes after them.

05:27.640 --> 05:30.110
We can expand this and check out the head of the document.

05:30.460 --> 05:33.940
And finally if there are links on that page in our case there are no links.

05:33.970 --> 05:38.930
But if you wanted to get a list of all the links you would use document that links here again and them

05:38.930 --> 05:41.440
to the list because there are no links on that page.

05:41.440 --> 05:44.550
Now let's move on to some of these more important methods.

05:44.610 --> 05:46.970
Well not more important but probably more useful.

05:46.980 --> 05:48.460
The element by the.

05:48.490 --> 05:51.280
And then the query selector family elements.

05:51.280 --> 05:59.230
Let's clear this consul if we want to actually grab elements by ID we can use the get element by id

05:59.770 --> 06:00.550
method.

06:00.610 --> 06:02.650
But first off let's go back to him.

06:02.710 --> 06:09.640
And actually given I.D. to one of these extreme elements so let's give this list item the very first

06:09.640 --> 06:11.660
list sign on says document that you are ill.

06:11.950 --> 06:20.870
I'm going to give it an ID of pick me we'll save it and then let's also add a Classen here somewhere.

06:20.870 --> 06:33.730
Let's give both unordered lists a class of my UL and also give this one a class equal to my will.

06:33.750 --> 06:34.580
So my.

06:34.740 --> 06:35.230
Well my.

06:35.230 --> 06:41.280
Well there's a two classes and then we have one instance of the Pick me Id I'm going to save this and

06:41.280 --> 06:45.630
then I'll actually refresh my page to make sure those changes are loaded up here and then let's show

06:45.630 --> 06:48.620
you how we can grab these elements.

06:48.660 --> 06:51.960
The document object model using the methods we just described.

06:51.960 --> 06:53.450
So I expand this again.

06:54.260 --> 06:57.930
And then what I'm going to be doing here is off the document.

06:58.160 --> 07:05.010
I will say Get element by id and then I pasand the idea I want remember my ID.

07:05.040 --> 07:08.810
If I look back at the actual ASML is just pick me.

07:09.160 --> 07:10.400
Let's take that in.

07:10.400 --> 07:11.150
Pick me.

07:12.220 --> 07:15.090
We hit enter and we see here the T.M..

07:15.090 --> 07:17.490
It's a list item has ID pick me.

07:17.490 --> 07:20.530
And then it says document your URL to see actually URL the Web site.

07:20.820 --> 07:25.110
So if we come back up here it's actually highlighted I want to hover over it which is kind of nice to

07:25.110 --> 07:28.510
Chromes kind of helping you out here and pointing out what you actually grab.

07:28.590 --> 07:35.220
So let's say you can grab an element by id and then if we want to grab by a class name we say documents

07:35.340 --> 07:41.740
dot get elements by class name we can see kind of autocomplete there.

07:41.780 --> 07:48.580
I remember the class thing we created was my UL and then we get back what is essentially kind of acting

07:48.580 --> 07:50.320
like a list or an array.

07:50.320 --> 07:51.700
It's not quite the javascript the.

07:51.700 --> 07:54.920
So keep that in mind but it acts very similar to it.

07:55.090 --> 08:01.780
If we expand this we see we have sensu this T.M. collection of these two unordered lists and those have

08:01.780 --> 08:05.920
a bunch of properties themselves and later on we're going to see how we can actually grab those properties

08:05.920 --> 08:07.210
and affect them.

08:07.270 --> 08:10.330
But I'm going to collapse this right now.

08:10.330 --> 08:13.690
So we were able to grab elements by the elements by class name.

08:13.860 --> 08:17.690
And if you want to grab elements by the tag name you probably guessed that already.

08:17.730 --> 08:25.080
You just say document dot elements by tag name and then put a tag on.

08:25.080 --> 08:30.920
So if I want all the list elements I just pass it by and then those are all the list elements in.

08:30.960 --> 08:35.050
You're also given awareness that one of these has an idea attached to it.

08:35.830 --> 08:38.370
Now is talk about queery selector inquere selector.

08:38.410 --> 08:45.580
Which are not quite as obvious as the ID class name and tag name methods Curie's selector is really

08:45.580 --> 08:52.140
similar as far as grabbing a schema elements but what differentiates it from the by the by class name

08:52.140 --> 08:56.050
or by tag name is it actually uses the c SS style selector.

08:56.050 --> 08:58.710
So it saves you a bunch of time.

08:58.850 --> 09:02.450
And let me show you what I actually mean by CSL style selector.

09:02.620 --> 09:12.830
If I clear this ongoing going to grab my document say queery selector and then what I'm going to actually

09:12.830 --> 09:25.230
do here is pasan a query selector for a CSSA selector so I will say hash tag pick me a hit enter and

09:25.230 --> 09:27.140
I get the ID pick me.

09:27.150 --> 09:33.570
So just like you would if you had a CSSA file attached to him l and you wanted to effect an ID you would

09:33.570 --> 09:40.140
call the CSA style selector hash tag for the ID and then the ID name the query selector actually allows

09:40.140 --> 09:45.850
you to grab things by that seeis a style selector so that makes your life a lot easier.

09:45.990 --> 09:50.880
And now you don't actually need to even use by the by class name by tag name you can do everything queery

09:50.910 --> 09:54.000
selector and selector all.

09:54.020 --> 10:01.830
So let's imagine I want to grab all the tags will I could just say document queery selector.

10:02.300 --> 10:09.430
Well let's say queery selector all I passen Eli enter and I get the exact same thing as if I had done

10:09.430 --> 10:13.260
it by class name or excuse me if I had done it by tag name.

10:13.420 --> 10:20.640
So I wanted to do it by class name where I would say document and then query selector all snuck clear

10:20.680 --> 10:28.360
command wearie selector all and then pasand the class Berean over for CSSA style selectors.

10:28.360 --> 10:30.130
A class has a dot.

10:30.130 --> 10:31.650
So we say got.

10:31.690 --> 10:38.860
And then the class name which was my UL enter and we get back the exact same thing we previously got

10:39.090 --> 10:43.640
when we said get elements by class name and hopefully now you get the idea that all you have to do is

10:43.660 --> 10:44.970
query selector and query selector.

10:44.970 --> 10:46.720
All is passen.

10:46.720 --> 10:49.210
The actual CSA selector tag.

10:49.210 --> 10:54.170
And that saves you a lot of time for typing and it just makes the whole process a little more clear.

10:55.510 --> 11:00.800
And as I previously mentioned the difference between queries selector inquiry selector all is a query

11:00.800 --> 11:06.260
selector all returns all the objects matching the CSA style selector query selector just returns the

11:06.260 --> 11:07.460
very first object.

11:07.460 --> 11:16.680
So for instance here I see a document query selector all my UL returns two instances of that class.

11:16.760 --> 11:18.740
Let's say I just wanted to grab the first one.

11:19.160 --> 11:25.850
Well then I could say document query selector.

11:25.990 --> 11:32.460
Well and that will just return the very first instance of this class on the team out page.

11:32.470 --> 11:38.630
So that's the main difference between queries selector all and query selector.

11:38.630 --> 11:41.320
OK so we've covered had actually grabbed the objects.

11:41.330 --> 11:47.760
Let's show a very simple example of how to interact with those objects and changed her properties.

11:47.810 --> 11:51.190
Let's imagine I want to change the color of the header.

11:51.470 --> 11:56.300
Well the first thing I need to do is actually grab the letter so I will create a variable we'll call

11:56.300 --> 12:07.170
it my header and it won't set equal to document dot query selector and then passen the CSSA selector.

12:07.190 --> 12:13.550
In this case it's just the very first instance of heading 1 I hit enter and if I check out my header

12:13.820 --> 12:18.560
I get back H-1 it has some sort of style call saying it's color black.

12:18.560 --> 12:21.320
Most likely yours just says this is the header.

12:21.320 --> 12:23.270
I've already manipulated it for.

12:23.300 --> 12:26.090
But here we have the letter reached him L..

12:26.240 --> 12:29.790
Now let's change the actual color.

12:29.810 --> 12:33.730
So in this case I need to say my header dots.

12:33.730 --> 12:39.450
Now you notice we have a ton of attributes available for this header object are heading object.

12:39.500 --> 12:42.320
First of all we're going to mess around with it style.

12:42.320 --> 12:46.340
So then I will say style and as you scroll down you're going to see a lot of the things we learned about

12:46.700 --> 12:47.780
during the CSSA section.

12:47.780 --> 12:54.380
Of course things like the border with things like the color other things such as font properties height

12:54.470 --> 13:01.040
etc. margin but let's keep it simple let's just grab the color and if I want to change it all I have

13:01.040 --> 13:04.140
to do is set this equal to some other value.

13:04.160 --> 13:11.860
So for instance let's change it to red and hit enter here and now up here on the website page.

13:11.860 --> 13:17.950
I can see this is the header has been turned red and that's the basic fundamental idea of actually grabbing

13:17.950 --> 13:22.720
things from the document object model and then affecting them in some manner changing their properties.

13:22.720 --> 13:25.350
And that's really how the front end stack works.

13:25.350 --> 13:31.110
You have H.M.S. assess and then Javascript can use the DOM to go in and grab things.

13:31.150 --> 13:36.220
And later on we'll show you much more advanced methods such as performing those actions or interactions

13:36.250 --> 13:38.430
on clicks or when you hover over text.

13:38.530 --> 13:42.880
But the fundamental idea behind everything is that you're grabbing things from the document object model

13:43.150 --> 13:46.660
and then interacting with them or changing their properties in some way.

13:46.660 --> 13:52.010
Now let's actually show you how we can create that random color generator in the javascript file.

13:52.050 --> 13:55.220
Hi We'll come back here to this.

13:55.220 --> 13:58.080
Tim L. page right here and all the way down.

13:58.120 --> 14:06.230
I'm going to connect it back to part 1 color change your script save it and if you come over to the

14:06.230 --> 14:07.160
Javascript.

14:07.160 --> 14:11.340
So let's expand this a little more so we can get a good look at it.

14:11.360 --> 14:16.050
We have some examples of what we just did grabbing that header change in that style color.

14:16.070 --> 14:20.330
But let's show you how we could actually create the random color changing and I was going to walk through

14:20.330 --> 14:25.990
this code because it's essentially a little too complex for us at this moment in time.

14:26.000 --> 14:30.270
But later on you can always come back to this and you probably will understand it completely.

14:30.290 --> 14:33.910
In fact right now you should know enough javascript they're able to read this.

14:34.040 --> 14:36.890
But let's say I wanted to get a random color function.

14:36.980 --> 14:39.810
So every second I change something to a random color.

14:39.860 --> 14:45.200
Well the first thing I need to do is figure out how do I get a random color using javascript and for

14:45.200 --> 14:49.090
that you will probably use stack overflow and actually linked the stack overflow.

14:49.130 --> 14:50.540
That answers that question.

14:50.540 --> 14:55.010
So for me personally I'm not dealing with javascript as often as I would like.

14:55.010 --> 14:59.960
I'm usually dealing with Python more so if I'm forgetful of how to actually grab the random color I

14:59.960 --> 15:01.100
would start Google searching.

15:01.190 --> 15:05.750
And if you google search this you'll eventually come up to this stack overflow link which is right here

15:05.750 --> 15:12.260
for you and someone has been nice enough to place the actual answer of a random color generator in javascript

15:12.350 --> 15:16.280
so we can just copy and paste this code and put it in our script.

15:16.460 --> 15:19.350
And basically what this is doing we can see we have letters.

15:19.520 --> 15:24.740
We have some hex code and it's saying for eyes equal to zero all the way.

15:24.740 --> 15:26.070
I less than six.

15:26.240 --> 15:32.870
It's going to somehow grab a series of random letters and then put them in front of the hash tag and

15:32.870 --> 15:36.050
that's making hex codes for us and it's returning that hex codes.

15:36.050 --> 15:39.660
All this is doing is it's making random hex codes for us.

15:39.800 --> 15:45.420
So then we create this simple function for clarity we say function change header color.

15:45.620 --> 15:48.710
We say the color input is get random color.

15:48.710 --> 15:54.620
So again that's just returning a random hex code and then I'm saying Hetter that style that color is

15:54.620 --> 15:59.510
equal to the color input that random hex code that we just created and then I'm going to perform that

15:59.510 --> 16:05.780
action over a set of intervals and this is some javascript code for actually performing some javascript

16:05.780 --> 16:08.250
function over a set of certain intervals.

16:08.270 --> 16:09.810
In our case milliseconds.

16:09.830 --> 16:14.930
So all I'm saying here is every 500 milliseconds call this function right here.

16:14.930 --> 16:16.280
Change header color.

16:16.280 --> 16:23.190
So now if I save this then I come back to my actual page over here my main page and I refresh.

16:23.270 --> 16:27.480
I see now that I'm changing the color randomly every half a second.

16:27.950 --> 16:33.080
And that's the main fundamental idea behind the document object model and the interaction.

16:33.080 --> 16:38.420
Now we're going to cover is many more methods and many more details about this process and how to go

16:38.420 --> 16:39.850
through it in future lectures.

16:39.860 --> 16:44.180
And this section of the course and then later on we'll show you a query which kind of also simplifies

16:44.180 --> 16:45.980
this entire process for you.

16:45.980 --> 16:48.010
Thanks everyone and I'll see you at the next lecture.
