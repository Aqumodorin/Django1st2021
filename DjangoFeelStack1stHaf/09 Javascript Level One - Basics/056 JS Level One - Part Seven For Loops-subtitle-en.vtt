WEBVTT

00:05.440 --> 00:09.590
Hello everyone and welcome to part 7 for loops.

00:09.740 --> 00:13.550
So we're going to be learning about the most basic for loop in javascript and this lecture.

00:13.550 --> 00:18.560
And if you've only dealt with for loops in Python before you may actually want to watch this lecture

00:18.590 --> 00:23.870
instead of just reading notes because the syntax for a for loop or basic for loop in javascript is going

00:23.870 --> 00:27.150
to appear quite different to you versus Python's for loop.

00:28.390 --> 00:29.800
OK so what is a for loop.

00:29.800 --> 00:35.140
Well a for loop allows you to continually execute code usually a specific number of times or linked

00:35.170 --> 00:38.200
to the elements in a sequence.

00:38.200 --> 00:43.870
Now Javascript has three types of four loops it has its most basic for loop which just iterates through

00:43.870 --> 00:50.260
some block of code a certain number of times that it has to for in construct which loops through a javascript

00:50.320 --> 00:55.130
object and a javascript object is a data structure in javascript that we haven't covered yet.

00:55.480 --> 01:00.400
And then there's also the form of loop which is used with Javascript the race which again is another

01:00.400 --> 01:01.300
data structure.

01:01.300 --> 01:02.760
We haven't actually covered yet.

01:02.830 --> 01:06.410
So until we cover those we'll leave for loops in four of loops.

01:06.430 --> 01:13.120
Aside for now and as a quick note previously we use the notation Nahm is equal to plus one when during

01:13.120 --> 01:16.780
a loop we want it to increment the variable number by just one.

01:16.780 --> 01:19.020
There's also two other ways of writing that.

01:19.180 --> 01:23.210
And that is numb plus equal to 1 or nonplus plus.

01:23.300 --> 01:29.170
And if you want to subtract 1 you would just say no minus equals 1 or minus minus.

01:29.170 --> 01:30.850
So these are all the same.

01:30.880 --> 01:33.540
All three of these statements are doing the exact same thing.

01:33.670 --> 01:35.670
That's just a heads up because of javascript.

01:35.770 --> 01:40.560
The most common one you'll see is the very last one numb plus plus.

01:40.660 --> 01:40.960
All right.

01:40.990 --> 01:44.540
This is what the most basic version of a for loop in javascript looks like.

01:44.620 --> 01:49.270
You have your four keyword statement and then you have three other statements separated by semi-colons

01:49.540 --> 01:53.840
inside of parentheses and inside the brackets you execute some code for the for loop.

01:53.860 --> 01:58.540
So let's actually describe Well each of these statements represents and we'll show you an example as

01:58.540 --> 02:00.010
we go along.

02:00.070 --> 02:02.470
So statement 1 is executed before the loop.

02:02.470 --> 02:07.690
Or that could block even begins and that could be something like the find the variable i is equal to

02:07.690 --> 02:08.290
zero.

02:08.420 --> 02:12.850
Well I can think of that similar to the While loop where we just said something like Nahm is equal to

02:12.850 --> 02:14.400
zero or x is equal to zero.

02:14.500 --> 02:18.740
So Statement 1 is executed before the loop even really starts.

02:18.840 --> 02:23.840
Then we have statement 2 which is there in the middle and statement to the finds the condition for running

02:23.850 --> 02:24.530
the loop.

02:24.580 --> 02:26.660
And in this case we can almost think of this for loop.

02:26.760 --> 02:29.420
There's just another syntax way of writing a while loop.

02:29.520 --> 02:33.840
So what's an example of that while statement 2 could be something like this.

02:33.860 --> 02:35.950
Well I'm less than five.

02:36.000 --> 02:40.320
So here we can see we're almost just rewriting a while loop inside of this force statement.

02:40.320 --> 02:45.090
We're starting off with the variable I's equal to zero and we're saying keep running this loop while

02:45.150 --> 02:47.130
I's less than five.

02:47.280 --> 02:52.780
And then finally statement 3 is what is executed each time after the loop cycles through once.

02:52.800 --> 02:57.070
So just like a while loop we saw earlier we may want to incrementally add.

02:57.360 --> 03:00.410
So here with this for missing is start off with the variable.

03:00.420 --> 03:05.240
Isaac bizzarro and while I have less than 5 you some code.

03:05.280 --> 03:09.600
And then every cycle you're going to add one to I or I plus plus.

03:09.600 --> 03:10.020
All right.

03:10.020 --> 03:13.060
So let's see some examples of for loops in the editor.

03:13.060 --> 03:17.160
All right so here's my editor and I have my browser of my console open and it's linked just as we've

03:17.160 --> 03:18.750
done in previous lectures.

03:18.750 --> 03:22.620
Let's start off with the most basic correlate that we initially discussed.

03:22.620 --> 03:27.560
So again I'm going to say something like for an EQ and actually hit enter here.

03:27.630 --> 03:33.180
Note that Adam gives you the three options the four four in and then four of will start with just the

03:33.180 --> 03:34.260
most basic four.

03:34.470 --> 03:38.710
We hit enter what's really nice is Adam takes care of a lot of the stuff right now.

03:38.710 --> 03:44.160
It takes care of statement 1 that initialization of a variable takes care statement 2 which is what

03:44.160 --> 03:50.130
we actually want to run through and the while condition and then plus plus or statement 3 we want to

03:50.130 --> 03:53.510
happen after every time this is run.

03:53.510 --> 04:03.370
Now let's actually change the array that length to just be less than five and we're going to say

04:05.950 --> 04:14.020
the log number is and then we'll concatenate it with I.

04:14.150 --> 04:16.770
So let's save this and actually run this here.

04:17.680 --> 04:20.480
And here you can see numbers 0 1 2 3 and 4.

04:20.710 --> 04:25.360
You can see this is basically just another way of rewriting a 4 or excuse me a while loop.

04:25.440 --> 04:31.180
We have some initial condition the while condition and then what we want to do after every time this

04:31.180 --> 04:34.150
loop run in like I mentioned earlier.

04:34.170 --> 04:43.460
This plus plus is just another way of writing eyes equal to I plus one I can save that and if I refresh

04:43.520 --> 04:45.070
or get the exact same result.

04:45.470 --> 04:48.390
And another note is that this doesn't actually have to be.

04:48.410 --> 04:50.630
I could call this whatever you want.

04:50.630 --> 05:01.800
So you could say variable num While numbers is less than five we could say nonplus plus right as them

05:01.980 --> 05:05.370
save this we refresh or we get the exact same result.

05:05.550 --> 05:08.540
It's most commonly used for I.

05:08.610 --> 05:14.760
So keep that in mind you'll see a lot but sometimes it might be helpful to you to rename it if it helps

05:14.850 --> 05:16.290
the readability of your code.

05:16.410 --> 05:22.980
But more often than not you're going to see it as I and it so often I that that's why Adam text editor

05:23.070 --> 05:26.190
auto fills it to be I OK.

05:26.400 --> 05:28.900
So let's continue on with another example.

05:28.920 --> 05:33.900
We're going to create a variable called Word and let's just have it be the first few letters of the

05:33.900 --> 05:41.420
alphabet A B C D E F G H I J K OK.

05:41.860 --> 05:47.100
And then I'll start typing for enter and I usually say four I's equal to zero.

05:47.360 --> 05:53.210
I array that length and added text editor actually auto highlights array for me to change it to something.

05:53.270 --> 05:57.720
So I will change it to Word and you can see that it's actually auto filling that in for me.

05:57.830 --> 06:04.750
Inside the for loop which is quite nice and I'm going to log this so I will say LMG lips.

06:05.060 --> 06:12.420
Let me click somewhere in the activate that and then we'll say log in I'm going to input word indexed

06:12.770 --> 06:15.900
at that location case let's say this.

06:15.910 --> 06:17.270
Now what do you think is going to happen here.

06:17.290 --> 06:18.640
Take some time.

06:18.640 --> 06:20.430
So it will refresh and we see here.

06:20.440 --> 06:24.860
Now we get ABC the AFGE all the way to Cape.

06:24.870 --> 06:28.980
So again this is just a way of kind of rewriting the while loop.

06:28.980 --> 06:35.310
So we are equal to zero and will I's less than the length of the actual word he incrementing I and then

06:35.310 --> 06:37.390
print out the index location.

06:37.740 --> 06:39.690
ABC etc..

06:40.080 --> 06:46.320
Right now let's show you another example where let's say you wanted to skip every other letter or something

06:47.250 --> 06:48.170
to make that obvious.

06:48.180 --> 06:55.090
I'll do something like this A B B B B A B A B.

06:55.340 --> 06:57.180
And then I'll write a for loop here.

06:57.830 --> 07:02.790
And I'm going to keep most things the same except over here where it says I.

07:02.810 --> 07:10.930
Plus plus I can do something like icicle 2 I plus two armlets this again.

07:12.420 --> 07:15.050
Put that site.

07:15.230 --> 07:18.220
And now what do you think is going to happen when I refresh this page.

07:18.560 --> 07:25.460
Well I can see a printed out five times and if something is repeatedly put into the console a Google

07:25.460 --> 07:27.870
Chrome will actually just put a little number here next to it.

07:27.980 --> 07:32.000
Instead of flooding your screen with repeated code or repeat the output.

07:32.000 --> 07:37.040
So this little number here represents that a whisper put out five times which makes sense because if

07:37.040 --> 07:41.560
you look at this we have 1 2 3 4 5 A's in that word.

07:41.600 --> 07:46.640
So you can see here it doesn't have to just increment by one increment by any number you want or you

07:46.640 --> 07:48.500
can even go down it can decrease.

07:48.500 --> 07:51.800
OK so that's all we need to know about for loops and Javascript for now.

07:51.830 --> 07:55.730
Coming up next we're going to do a quick exercise just to practice your understanding.

07:55.760 --> 07:57.110
Well see at the next lecture.
