WEBVTT

00:04.930 --> 00:08.470
Hello everyone and welcome to part four dictionaries.

00:08.470 --> 00:11.110
Dictionaries are Python's version of hash tables.

00:11.170 --> 00:14.680
And back when we were working javascript these were known as objects.

00:14.680 --> 00:20.050
And again they allow us to create a mapping of key value pairs in something to really know about dictionaries

00:20.260 --> 00:22.440
is that they do not retain any order.

00:22.540 --> 00:25.000
They only have a key value pair system.

00:25.000 --> 00:28.930
Let's get started learning about the most important aspects of Python dictionaries.

00:28.930 --> 00:30.580
Let's talk to the editor now.

00:30.580 --> 00:32.630
OK let's start learning about dictionaries.

00:32.650 --> 00:40.010
First of all create a variable called my stuff and we can have curly brackets which defines a dictionary.

00:40.570 --> 00:41.720
And then we'll have a key.

00:41.830 --> 00:48.460
We'll make one key one and then we have a colon separating its value for instance will have value and

00:48.460 --> 00:50.960
then a comma separated the next key value pair.

00:50.980 --> 00:54.870
So again we'll have a string here to colon.

00:54.900 --> 00:58.060
And then value two.

00:58.960 --> 01:02.400
And if we want to actually grab a value you'd call it by its key.

01:02.500 --> 01:07.950
So I will print my stuff and then add square brackets passen the Kitwana.

01:08.050 --> 01:16.000
So let's say key one save this and I will say Python and I've called this script notes that PI enter.

01:16.000 --> 01:17.490
And I get back value.

01:17.730 --> 01:23.110
And if I switch this to key to save this run this again I get volume 2.

01:23.440 --> 01:26.980
Again very similar to how objects worked in Javascript.

01:26.980 --> 01:31.180
And it's important to note that dictionaries are very flexible and the data types they can hold.

01:31.180 --> 01:33.870
So for instance this could have been a number.

01:33.910 --> 01:41.200
This could have been a string I could've created in other key called G-3 and that could've had another

01:41.200 --> 01:48.160
dictionary inside of it with another key one two three and a list of items here.

01:48.160 --> 01:51.480
So this is totally doable with Python.

01:51.650 --> 01:56.030
And if I just say print my stuff you can save this.

01:56.380 --> 01:57.170
Run this.

01:57.190 --> 01:59.980
And here we have the entire dictionary.

02:00.000 --> 02:04.780
Now notice here that the dictionary was not printed out in the same order that I defined it up here.

02:04.950 --> 02:08.080
So again note dictionaries do not retain any sort of order.

02:08.460 --> 02:14.430
But let's imagine that I wanted to grab a particular item from this nested dictionary inside of a list.

02:14.520 --> 02:18.000
I'll call this grabbed me.

02:18.960 --> 02:22.880
So I want to grab the string called grab me how to actually get it from my stuff.

02:22.900 --> 02:25.450
Well the first thing I need to do is work from the outside in.

02:25.800 --> 02:32.140
So from the inside out Scuse me we see here that we are the third item in the list meaning I'm an index

02:32.170 --> 02:35.440
too so I can start getting that in the brackets.

02:35.590 --> 02:37.270
Then I'm at this key.

02:37.270 --> 02:38.660
One two three.

02:38.710 --> 02:40.420
So we'll have that as well.

02:40.420 --> 02:41.180
One two three.

02:41.190 --> 02:45.040
That string and then that is with this key key three

02:50.250 --> 02:54.270
and then finally that whole thing belongs to the dictionary called my stuff.

02:54.270 --> 03:01.450
So if I add this these layers first go to key three then grab a key one two three then grab index two.

03:01.490 --> 03:02.340
Let's save this.

03:02.340 --> 03:05.640
Run it and I see I have the string grab me.

03:05.640 --> 03:06.010
OK.

03:06.060 --> 03:11.130
So that's just a little practice exercise for you to check out and what I can do is keep calling stuff

03:11.160 --> 03:11.780
off of this.

03:11.790 --> 03:18.660
So let's say I called Upper off of that run this and I see grabbed me in all caps.

03:18.660 --> 03:23.570
Hopefully you will never see something this nested But keep in mind that Python does make it possible.

03:23.580 --> 03:26.250
Am pretty straightforward honestly.

03:26.250 --> 03:29.060
Now let's talk about how to reassign dictionary items.

03:29.100 --> 03:33.090
Let me redefine my stuff to be something like

03:36.330 --> 03:45.560
lunch and we'll define that as the string pizza and let's define be fast for breakfast as the string

03:46.280 --> 03:55.920
eggs say we'll save that call my stuff and if I call lunch let's print this out.

03:57.570 --> 04:02.210
So print out my lunch I should get back pizza when I run the script.

04:02.580 --> 04:06.450
So there's pizza if I ever want to change a key value pair.

04:06.540 --> 04:12.240
What I can do is say the name of the dictionary my stuff called the key.

04:12.550 --> 04:16.890
In this case it's lunch and then set it equal to something new.

04:17.140 --> 04:19.810
So for instance let's say I had a burger for lunch.

04:19.840 --> 04:20.920
We'll save that.

04:20.920 --> 04:27.820
And now when I run this I get burger out and that is changed permanently in this dictionary if I want

04:27.820 --> 04:29.480
to add a new key.

04:29.590 --> 04:36.220
Then all I have to do is say my stuff put a new key here and we can say something like dinner and then

04:36.220 --> 04:38.410
define that to be what I have.

04:38.440 --> 04:48.250
Let's add pasta for her save that run this you know I have Burger let's define Crantz my stuff save

04:48.250 --> 04:48.450
that.

04:48.450 --> 04:54.280
So print the entire dictionary and see here that I printed out burger when I had the first eggs lunch

04:54.280 --> 04:58.980
got redefines a burger and then I had dinner for pasta or pasta for dinner.

04:59.290 --> 04:59.610
OK.

04:59.620 --> 05:01.450
That's really all we need to know about dictionaries.

05:01.450 --> 05:02.800
They should feel very familiar.

05:02.860 --> 05:05.290
Given that you've already done objects with javascript.

05:05.290 --> 05:10.150
One thing that's different with between objects and Javascript and dictionaries in Python is you don't

05:10.150 --> 05:13.840
really have the ability to add methods to dictionaries.

05:13.840 --> 05:17.130
Instead they are just key value pairs just Street hash tables.

05:17.260 --> 05:23.680
You won't be using them for methods inside a dictionary like we did with objects in javascript to do

05:23.680 --> 05:28.180
that with Python we'll have to learn about object oriented programming which would discuss later on

05:28.180 --> 05:28.960
in the course.

05:29.080 --> 05:32.020
OK thanks everyone and I'll see you at the next lecture.
